clear;

load("../dist.mat");



%%
clf;
n = 128;
imagesc(dist/n/n);
axis square;
set(gca, "ydir", "normal");
colorbar();
clim([0,1]);

%%
for i = 1:size(fs,1)
  clf;
  tiledlayout(1,2);
  vis( squeeze(fs(i,:,:,:)) );
  drawnow;
end

%%
%idx = [141, 170];
%idx = [241, 264];
idx = [243, 362];
idx = [555, 582];
idx = [1015, 1207];
idx = [1263, 1323];
idx = [243, 309];
idx= [556, 593];

idx = [155, 194];

dt = 0.01;
ministeps = 32;
T = dt*ministeps*(idx(2) - idx(1))

tiledlayout(2,2);

vis( squeeze(fs(idx(1),:,:,:)) );


vis( squeeze(fs(idx(2),:,:,:)) );



%%
clear;
load("data/RPO_candidate_4152.mat");

clf;
tiledlayout(1,2);
vis( fields );
T
sx

%%

n = 128;
k = 0:n-1;
k(k>n/2) = k(k>n/2) - n;
k = reshape(k, 1, []);


figure(1);
%while(true)
for i = 0:24
  load("timeseries/" + i + ".mat");

  f = fft(f, [], 2);
  f = f .* exp( -1i* i/24 *sx * k );
  f = real(ifft(f, [], 2));

  tiledlayout(1,2);
  vis(f);

  %colormap bluewhitered

  drawnow;

  %saveas(gcf, sprintf("frames/%03d.png", i) );
end
%end

%%
figure(2);
clf;
%tiledlayout(2,2);
load("timeseries/" + 0 + ".mat");
vis(f);

load("timeseries/" + 24 + ".mat");
vis(f);




function vis(f)
  fs = 32;

  nexttile
  data = squeeze(f(1,:,:)).';
  %imagesc( [data,data;data,data] );
  imagesc(data);
  axis square;
  clim([-10 10]);
  title("$\nabla \times {\bf u}$", "interpreter", "latex", "fontsize", fs);
  set(gca, 'ydir', 'normal'); xticks([]); yticks([]);

  nexttile
  data = squeeze(f(2,:,:)).';
  %imagesc( [data,data;data,data] );
  imagesc(data);
  axis square;
  clim([-10 10]);
  title("$\nabla \times {\bf B}$", "interpreter", "latex", "fontsize", fs);
  set(gca, 'ydir', 'normal'); xticks([]); yticks([]);
end

function transform( f )
  %{
  Apply a symmetry operation to the data
  %}

  %Do everything spectrally
  f = fft(fft(f, [], 2), [], 3);

  

end